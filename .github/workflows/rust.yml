name: Deploy

on: [push, workflow_dispatch]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_github_pages:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v2

      - name: Install rust nightly
        uses: actions-rs/toolchain@v1
        with:
          target: wasm32-unknown-unknown
          toolchain: nightly
          override: true

      - name: Install wasm-pack
        run: curl -sSf https://rustwasm.github.io/wasm-pack/installer/init.sh | sh

      - name: Cache target
        id: cache-target
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-target

      - name: Build wasm
        run: npm run build:wasm

      - name: Cache node_modules
        id: cache-node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules

      - name: Cache yarn
        id: cache-yarn
        uses: actions/cache@v3
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn

      - name: Install yarn packages
        run: yarn install

      - name: Build wasm and frontend
        run: yarn run build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

  publish_docker_image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Delete old images
        uses: snok/container-retention-policy@v1
        with:
          image-names: ${{ github.event.repository.name }}
          cut-off: 1 day ago UTC
          timestamp-to-use: updated_at
          account-type: personal
          token: ${{ secrets.TOKEN }}
          untagged-only: true
